services:
  # MICROSERVICES

  basket-api:
    container_name: basket-api
    image: basket-api
    build:
      context: src/baskets/Basket.Api
    ports:
      - 8081:80
    networks:
      - microservices

  orders-api:
    container_name: orders-api
    image: orders-api
    build:
      context: src/orders/Orders.Api
    environment:
      - KAFKA__BOOTSTRAPSERVERS=kafka:29092
    ports:
      - 8082:80
    networks:
      - microservices

  orders-consumer:
    container_name: orders-consumer
    image: orders-consumer
    build:
      context: src/orders/Orders.Consumer
    environment:
      - KAFKA__BOOTSTRAPSERVERS=kafka:29092
    restart: on-failure
    networks:
      - microservices

  orders-reporting:
    container_name: orders-reporting
    image: orders-reporting
    build:
      context: src/orders/Orders.Reporting
    restart: on-failure
    networks:
      - microservices

  products-api:
    container_name: products-api
    image: products-api
    build:
      context: src/products/Products.Api
    ports:
      - 8083:8080
    networks:
      - microservices

  users-idp:
    container_name: users-idp
    image: users-idp
    build:
      context: src/users/users.Idp
    ports:
      - 8084:80
    networks:
      - microservices

networks:
  microservices:
    driver: bridge
